name: Notify Branch Owners

on: push

jobs:
  notify-branch-owners:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get all branches
        id: get_branches
        run: |
          branches=$(git for-each-ref --format='%(refname:short)' refs/heads/)
          echo "branches=$branches" >> $GITHUB_ENV
          echo "DEBUG: Found branches: $branches"

      - name: Check branches and send notifications via Symphony
        run: |
            for branch in ${{ env.branches }}; do
              echo "DEBUG: Processing branch: $branch"
            
              first_commit=$(git rev-list --max-parents=0 HEAD)
              first_commit_date=$(git show -s --format=%ci $first_commit)
              echo "DEBUG: First commit date for branch $branch: $first_commit_date"
            
              # Check if the branch has a PR and whether it has been merged into master
              pr_info=$(gh pr list --head "$branch" --json state,mergeable --jq '.[]')
              pr_exists=$(echo "$pr_info" | jq -r '.state')
              pr_mergeable=$(echo "$pr_info" | jq -r '.mergeable')
            
              echo "DEBUG: PR state for branch $branch: $pr_exists"
              echo "DEBUG: PR mergeable for branch $branch: $pr_mergeable"
            
              # Get branch owner email from user profile (assuming employee ID is stored in the profile)
              employee_id=$(git log --format='%ae' --reverse | head -n 1 | sed 's/@.*//')
              echo "DEBUG: Extracted employee ID for branch $branch: $employee_id"
            
              # Calculate date difference
              days_diff=$(( ( $(date +%s) - $(date +%s -d "$first_commit_date") )/(60*60*24) ))